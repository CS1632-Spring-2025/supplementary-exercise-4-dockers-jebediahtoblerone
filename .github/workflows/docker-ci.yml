name: Docker CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test_dockerized_webserver:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get -y install google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%.*}")
          wget -O chromedriver.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
          sudo unzip -o chromedriver.zip -d /usr/local/bin
          sudo chmod +x /usr/local/bin/chromedriver
          rm chromedriver.zip

      - name: Launch Web Service
        run: docker compose up -d --build

      - name: Wait for Web Service
        run: |
          chmod +x wait-for-webserver.sh
          ./wait-for-webserver.sh

      - name: Run Selenium Tests
        run: |
          cd selenium
          mvn test
          TEST_EXIT_CODE=$?
          # Capture logs if tests fail
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            docker compose logs > docker_logs.txt
            echo "::warning::Tests failed, see docker_logs.txt for container logs"
          fi
          exit $TEST_EXIT_CODE

      - name: Stop containers
        if: always()
        run: docker compose down